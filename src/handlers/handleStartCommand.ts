import { sendTelegramMessage } from "./sendTelegramMessage";

export async function handleStartCommand(
  chatId: number,
  username: string | undefined
): Promise<void> {
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    const requestBody = {
      id: chatId,
      username: username || "unknown",
      code: "123456", // –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–¥–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ API
    const response = await fetch("https://app.alpha.broker/api/auth/login", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(requestBody),
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
    if (!response.ok) {
      const errorText = await response.text();
      console.error("Error authenticating user:", errorText);
      throw new Error(`Error authenticating user: ${errorText}`);
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –∏–∑ –æ—Ç–≤–µ—Ç–∞
    const { link } = await response.json();

    if (!link) {
      throw new Error("API did not return a valid link.");
    }

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∞
    const welcomeText = `
      üöÄ Welcome to ALPHA BROKER!
      
      üîë Manage wallets and launch tokens on Solana.
      üëá Click the button below to start your journey:
    `;

    const buttons = [[{ text: "Go to ALPHA BROKER", url: link }]];

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π
    await sendTelegramMessage(chatId, welcomeText, buttons);
  } catch (error) {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    console.error("Error handling /start command:", error);

    await sendTelegramMessage(
      chatId,
      "An error occurred while processing your request. Please try again later."
    );
  }
}
